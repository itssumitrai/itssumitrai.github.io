import './App.svelte.css.proxy.js';
/* src/App.svelte generated by Svelte v3.32.0 */
import {
	SvelteComponent,
	append,
	attr,
	check_outros,
	create_component,
	destroy_component,
	destroy_each,
	detach,
	element,
	group_outros,
	init,
	insert,
	mount_component,
	noop,
	safe_not_equal,
	space,
	transition_in,
	transition_out
} from "../_snowpack/pkg/svelte/internal.js";

import Nav from "./Nav.svelte.js";
import Intro from "./Intro.svelte.js";
import Card from "./Card.svelte.js";
import cards from "./cards.js";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[0] = list[i];
	return child_ctx;
}

// (14:8) {#each cards as card}
function create_each_block(ctx) {
	let card;
	let current;

	card = new Card({
			props: {
				title: /*card*/ ctx[0].title,
				link: /*card*/ ctx[0].link,
				org: /*card*/ ctx[0].organization,
				period: /*card*/ ctx[0].period,
				snippet: /*card*/ ctx[0].snippet,
				content: /*card*/ ctx[0].content,
				location: /*card*/ ctx[0].location
			}
		});

	return {
		c() {
			create_component(card.$$.fragment);
		},
		m(target, anchor) {
			mount_component(card, target, anchor);
			current = true;
		},
		p: noop,
		i(local) {
			if (current) return;
			transition_in(card.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(card.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			destroy_component(card, detaching);
		}
	};
}

function create_fragment(ctx) {
	let main;
	let header;
	let nav;
	let t0;
	let intro;
	let t1;
	let article;
	let t2;
	let footer;
	let current;
	nav = new Nav({});
	intro = new Intro({});
	let each_value = cards;
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const out = i => transition_out(each_blocks[i], 1, 1, () => {
		each_blocks[i] = null;
	});

	return {
		c() {
			main = element("main");
			header = element("header");
			create_component(nav.$$.fragment);
			t0 = space();
			create_component(intro.$$.fragment);
			t1 = space();
			article = element("article");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			t2 = space();
			footer = element("footer");
			footer.textContent = "Sumit Rai 2021";
			attr(header, "class", "app-header svelte-1i8q6uy");
			attr(article, "class", "card-container svelte-1i8q6uy");
			attr(footer, "class", "svelte-1i8q6uy");
			attr(main, "class", "app svelte-1i8q6uy");
		},
		m(target, anchor) {
			insert(target, main, anchor);
			append(main, header);
			mount_component(nav, header, null);
			append(header, t0);
			mount_component(intro, header, null);
			append(main, t1);
			append(main, article);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(article, null);
			}

			append(main, t2);
			append(main, footer);
			current = true;
		},
		p(ctx, [dirty]) {
			if (dirty & /*cards*/ 0) {
				each_value = cards;
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
						transition_in(each_blocks[i], 1);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						transition_in(each_blocks[i], 1);
						each_blocks[i].m(article, null);
					}
				}

				group_outros();

				for (i = each_value.length; i < each_blocks.length; i += 1) {
					out(i);
				}

				check_outros();
			}
		},
		i(local) {
			if (current) return;
			transition_in(nav.$$.fragment, local);
			transition_in(intro.$$.fragment, local);

			for (let i = 0; i < each_value.length; i += 1) {
				transition_in(each_blocks[i]);
			}

			current = true;
		},
		o(local) {
			transition_out(nav.$$.fragment, local);
			transition_out(intro.$$.fragment, local);
			each_blocks = each_blocks.filter(Boolean);

			for (let i = 0; i < each_blocks.length; i += 1) {
				transition_out(each_blocks[i]);
			}

			current = false;
		},
		d(detaching) {
			if (detaching) detach(main);
			destroy_component(nav);
			destroy_component(intro);
			destroy_each(each_blocks, detaching);
		}
	};
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, null, create_fragment, safe_not_equal, {});
	}
}

export default App;